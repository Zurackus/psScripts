#!/bin/bash
#Make users and group
sudo useradd sonarr -u 13001
sudo useradd radarr -u 13002
sudo useradd lidarr -u 13003
sudo useradd readarr -u 13004
sudo useradd mylar -u 13005
sudo useradd prowlarr -u 13006
sudo useradd qbittorrent -u 13007
sudo useradd jackett -u 13008
sudo useradd overseerr -u 13009
sudo useradd plex -u 13010
sudo useradd sabnzbd -u 13011
sudo useradd jellyseerr -u 13012
sudo groupadd mediacenter -g 13000
sudo usermod -a -G mediacenter sonarr
sudo usermod -a -G mediacenter radarr
sudo usermod -a -G mediacenter lidarr
sudo usermod -a -G mediacenter readarr
sudo usermod -a -G mediacenter mylar
sudo usermod -a -G mediacenter prowlarr
sudo usermod -a -G mediacenter qbittorrent
sudo usermod -a -G mediacenter jackett
sudo usermod -a -G mediacenter overseerr
sudo usermod -a -G mediacenter plex
sudo usermod -a -G mediacenter sabnzbd
sudo usermod -a -G mediacenter jellyseerr
#Make directories
sudo mkdir -pv docker/{sonarr,radarr,lidarr,readarr,mylar,prowlarr,qbittorrent,jackett,audiobookshelf,overseerr,plex,tautulli,sabnzbd,jellyseerr}-config
sudo mkdir -pv data/{torrents,usenet,media}/{tv,movies,music,books,comics,audiobooks,podcasts,audiobookshelf-metadata}
#Set permissions
sudo chmod -R 775 data/
sudo chown -R $(id -u):mediacenter data/
sudo chown -R sonarr:mediacenter docker/sonarr-config
sudo chown -R radarr:mediacenter docker/radarr-config
sudo chown -R lidarr:mediacenter docker/lidarr-config
sudo chown -R readarr:mediacenter docker/readarr-config
sudo chown -R mylar:mediacenter docker/mylar-config
sudo chown -R prowlarr:mediacenter docker/prowlarr-config
sudo chown -R qbittorrent:mediacenter docker/qbittorrent-config
sudo chown -R jackett:mediacenter docker/jackett-config
sudo chown -R overseerr:mediacenter docker/overseerr-config
sudo chown -R plex:mediacenter docker/plex-config
sudo chown -R sabnzbd:mediacenter docker/sabnzbd-config
sudo chown -R jellyseerr:mediacenter docker/jellyseerr-config
echo"UID=$(id -u)">>.env

---
version: "3.1"
services:
sonarr:
image: lscr.io/linuxserver/sonarr:latest
container_name: sonarr
environment:
- PUID=13001
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/sonarr-config:/config
- /home/user/ezarr/data:/data
ports:
- "8989:8989"
restart: unless-stopped
radarr:
image: lscr.io/linuxserver/radarr:latest
container_name: radarr
environment:
- PUID=13002
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/radarr-config:/config
- /home/user/ezarr/data:/data
ports:
- "7878:7878"
restart: unless-stopped
lidarr:
image: lscr.io/linuxserver/lidarr:latest
container_name: lidarr
environment:
- PUID=13003
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/lidarr-config:/config
- /home/user/ezarr/data:/data
ports:
- "8686:8686"
restart: unless-stopped
readarr:
image: lscr.io/linuxserver/readarr:develop
container_name: readarr
environment:
- PUID=13004
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/readarr-config:/config
- /home/user/ezarr/data:/data
ports:
- "8787:8787"
restart: unless-stopped
mylar3:
image: lscr.io/linuxserver/mylar3:latest
container_name: mylar3
environment:
- PUID=13005
- PGID=13000
- UMASK=002
volumes:
- /home/user/ezarr/config/mylar-config:/config
- /home/user/ezarr/data:/data
ports:
- "8090:8090"
restart: unless-stopped
audiobookshelf:
image: ghcr.io/advplyr/audiobookshelf:latest
container_name: audiobookshelf
environment:
- AUDIOBOOKSHELF_UID=13009
- AUDIOBOOKSHELF_GID=13000
volumes:
- /home/user/ezarr/config/audiobookshelf:/config
- /home/user/ezarr/data/audiobooks:/audiobooks
- /home/user/ezarr/data/podcasts:/podcasts
- /home/user/ezarr/data/metadata:/metadata
ports:
- "13378:80"
restart: unless-stopped
prowlarr:
image: lscr.io/linuxserver/prowlarr:develop
container_name: prowlarr
environment:
- PUID=13006
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/prowlarr-config:/config
ports:
- "9696:9696"
restart: unless-stopped
plex:
image: lscr.io/linuxserver/plex:latest
container_name: plex
network_mode: host
environment:
- PUID=13010
- PGID=13000
- VERSION=docker
- PLEX_CLAIM=
volumes:
- /home/user/ezarr/config/plex-config:/config
- /home/user/ezarr/data/media:/media
restart: unless-stopped
tautulli:
image: lscr.io/linuxserver/tautulli:latest
container_name: tautulli
depends_on:
- plex
environment:
- PUID=${UID}
- PGID=13000
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/tautulli-config:/config
ports:
- "8181:8181"
restart: unless-stopped
jellyfin:
image: lscr.io/linuxserver/jellyfin:latest
container_name: jellyfin
environment:
- PUID=${UID}
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/jellyfin-config:/config
- /home/user/ezarr/data/media:/data
ports:
- "8096:8096"
restart: unless-stopped
qbittorrent:
image: lscr.io/linuxserver/qbittorrent:latest
container_name: qbittorrent
environment:
- PUID=13007
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
- WEBUI_PORT=8080
volumes:
- /home/user/ezarr/config/qbittorrent-config:/config
- /home/user/ezarr/data/torrents:/data/torrents
ports:
- "8080:8080"
- "6881:6881"
- "6881:6881/udp"
restart: unless-stopped
sabnzbd:
image: lscr.io/linuxserver/sabnzbd:latest
container_name: sabnzbd
environment:
- PUID=13011
- PGID=13000
- UMASK=002
- TZ=Europe/Amsterdam
volumes:
- /home/user/ezarr/config/sabnzbd-config:/config
- /home/user/ezarr/data/usenet:/data/usenet
ports:
- "8081:8080"
restart: unless-stopped

classContainerConfig:
def__init__(self,
root_dir,
timezone,
plex_claim='',
):
self.root_dir=root_dir
self.timezone=timezone
self.config_dir=root_dir+'/config'
self.plex_claim=plex_claim
self.movie_dir=root_dir+'/media/movies'
self.tv_dir=root_dir+'/media/tv'
self.music_dir=root_dir+'/media/music'
self.book_dir=root_dir+'/media/books'
self.comic_dir=root_dir+'/media/comics'
self.torrent_dir=root_dir+'/data/torrents'
self.usenet_dir=root_dir+'/data/usenet'
defplex(self):
return(
' plex:\n'
' image: lscr.io/linuxserver/plex:latest\n'
' container_name: plex\n'
' network_mode: host\n'
' environment:\n'
' - PUID=13010\n'
' - PGID=13000\n'
' - VERSION=docker\n'
' - PLEX_CLAIM='+self.plex_claim+'\n'
' volumes:\n'
' - '+self.config_dir+'/plex-config:/config\n'
' - '+self.root_dir+'/data/media:/media\n'
' restart: unless-stopped\n\n'
)
deftautulli(self):
return(
' tautulli:\n'
' image: lscr.io/linuxserver/tautulli:latest\n'
' container_name: tautulli\n'
' depends_on:\n'
' - plex\n'
' environment:\n'
' - PUID=${UID}\n'
' - PGID=13000\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/tautulli-config:/config\n'
' ports:\n'
' - "8181:8181"\n'
' restart: unless-stopped\n\n'
)
defjellyfin(self):
return(
' jellyfin:\n'
' image: lscr.io/linuxserver/jellyfin:latest\n'
' container_name: jellyfin\n'
' environment:\n'
' - PUID=${UID}\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/jellyfin-config:/config\n'
' - '+self.root_dir+'/data/media:/data\n'
' ports:\n'
' - "8096:8096"\n'
' restart: unless-stopped\n\n'
)
defsonarr(self):
return(
' sonarr:\n'
' image: lscr.io/linuxserver/sonarr:latest\n'
' container_name: sonarr\n'
' environment:\n'
' - PUID=13001\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/sonarr-config:/config\n'
' - '+self.root_dir+'/data:/data\n'
' ports:\n'
' - "8989:8989"\n'
' restart: unless-stopped\n\n'
)
defradarr(self):
return(
' radarr:\n'
' image: lscr.io/linuxserver/radarr:latest\n'
' container_name: radarr\n'
' environment:\n'
' - PUID=13002\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/radarr-config:/config\n'
' - '+self.root_dir+'/data:/data\n'
' ports:\n'
' - "7878:7878"\n'
' restart: unless-stopped\n\n'
)
deflidarr(self):
return(
' lidarr:\n'
' image: lscr.io/linuxserver/lidarr:latest\n'
' container_name: lidarr\n'
' environment:\n'
' - PUID=13003\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/lidarr-config:/config\n'
' - '+self.root_dir+'/data:/data\n'
' ports:\n'
' - "8686:8686"\n'
' restart: unless-stopped\n\n'
)
defreadarr(self):
return(
' readarr:\n'
' image: lscr.io/linuxserver/readarr:develop\n'
' container_name: readarr\n'
' environment:\n'
' - PUID=13004\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/readarr-config:/config\n'
' - '+self.root_dir+'/data:/data\n'
' ports:\n'
' - "8787:8787"\n'
' restart: unless-stopped\n\n'
)
defmylar3(self):
return(
' mylar3:\n'
' image: lscr.io/linuxserver/mylar3:latest\n'
' container_name: mylar3\n'
' environment:\n'
' - PUID=13005\n'
' - PGID=13000\n'
' - UMASK=002\n'
' volumes:\n'
' - '+self.config_dir+'/mylar-config:/config\n'
' - '+self.root_dir+'/data:/data\n'
' ports:\n'
' - "8090:8090"\n'
' restart: unless-stopped\n\n'
)
defaudiobookshelf(self):
return(
' audiobookshelf:\n'
' image: ghcr.io/advplyr/audiobookshelf:latest\n'
' container_name: audiobookshelf\n'
' environment:\n'
' - AUDIOBOOKSHELF_UID=13009\n'
' - AUDIOBOOKSHELF_GID=13000\n'
' volumes:\n'
' - '+self.config_dir+'/audiobookshelf:/config\n'
' - '+self.root_dir+'/data/audiobooks:/audiobooks\n'
' - '+self.root_dir+'/data/podcasts:/podcasts\n'
' - '+self.root_dir+'/data/metadata:/metadata\n'
' ports:\n'
' - "13378:80"\n'
' restart: unless-stopped\n\n'
)
defprowlarr(self):
return(
' prowlarr:\n'
' image: lscr.io/linuxserver/prowlarr:develop\n'
' container_name: prowlarr\n'
' environment:\n'
' - PUID=13006\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/prowlarr-config:/config\n'
' ports:\n'
' - "9696:9696"\n'
' restart: unless-stopped\n\n'
)
defqbittorrent(self):
return(
' qbittorrent:\n'
' image: lscr.io/linuxserver/qbittorrent:latest\n'
' container_name: qbittorrent\n'
' environment:\n'
' - PUID=13007\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' - WEBUI_PORT=8080\n'
' volumes:\n'
' - '+self.config_dir+'/qbittorrent-config:/config\n'
' - '+self.torrent_dir+':/data/torrents\n'
' ports:\n'
' - "8080:8080"\n'
' - "6881:6881"\n'
' - "6881:6881/udp"\n'
' restart: unless-stopped\n\n'
)
defoverseerr(self):
return(
' overseerr:\n'
' image: sctx/overseerr:latest\n'
' container_name: overseerr\n'
' environment:\n'
' - PUID=13009\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/overseerr-config:/app/config\n'
' ports:\n'
' - "5055:5055"\n'
' restart: unless-stopped\n\n'
)
defjellyseerr(self):
return(
' jellyseerr:\n'
' image: fallenbagel/jellyseerr:latest\n'
' container_name: jellyseerr\n'
' environment:\n'
' - PUID=13012\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/jellyseerr-config:/app/config\n'
' ports:\n'
' - "5056:5055"\n'
' restart: unless-stopped\n\n'
)
defsabnzbd(self):
return(
' sabnzbd:\n'
' image: lscr.io/linuxserver/sabnzbd:latest\n'
' container_name: sabnzbd\n'
' environment:\n'
' - PUID=13011\n'
' - PGID=13000\n'
' - UMASK=002\n'
' - TZ='+self.timezone+'\n'
' volumes:\n'
' - '+self.config_dir+'/sabnzbd-config:/config\n'
' - '+self.usenet_dir+':/downloads\n'
' ports:\n'
' - "8081:8080"\n'
' restart: unless-stopped\n\n'
)

From <https://github.com/Luctia/ezarr/blob/main/container_configs.py> 


